; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; Workaround for rdar://112214443 until we allow call promotion for calls with ptrauth operand bundles.
; This work is tracked in rdar://54081384
; RUN: opt -S %s -mtriple arm64e-apple-ios -passes=sample-profile -sample-profile-file=%S/Inputs/indirect-call.prof | FileCheck %s

; Indirect call with ptrauth operand bundle should not be promoted
define void @test_inline(ptr, ptr %x) "use-sample-profile" !dbg !6 {
; CHECK-LABEL: define void @test_inline(
; CHECK-SAME: ptr [[TMP0:%.*]], ptr [[X:%.*]]) #[[ATTR0:[0-9]+]] !dbg [[DBG32:![0-9]+]] !prof [[PROF33:![0-9]+]] {
; CHECK-NEXT:    [[TMP2:%.*]] = alloca ptr, align 8
; CHECK-NEXT:    store ptr [[TMP0]], ptr [[TMP2]], align 8
; CHECK-NEXT:    [[TMP3:%.*]] = load ptr, ptr [[TMP2]], align 8
; CHECK-NEXT:    [[TMP4:%.*]] = call ptr [[TMP3]](ptr [[X]]) [ "ptrauth"(i32 0, i64 0) ], !dbg [[DBG34:![0-9]+]], !prof [[PROF35:![0-9]+]]
; CHECK-NEXT:    ret void
;
  %2 = alloca ptr
  store ptr %0, ptr %2
  %3 = load ptr, ptr %2
  call ptr %3(ptr %x) [ "ptrauth"(i32 0, i64 0) ], !dbg !7
  ret void
}

define ptr @foo_inline1(ptr %x) "use-sample-profile" !dbg !14 {
; CHECK-LABEL: define ptr @foo_inline1(
; CHECK-SAME: ptr [[X:%.*]]) #[[ATTR0]] !dbg [[DBG36:![0-9]+]] !prof [[PROF37:![0-9]+]] {
; CHECK-NEXT:    ret ptr [[X]]
;
  ret ptr %x
}

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1)
!1 = !DIFile(filename: "test.cc", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "test", scope: !1, file: !1, line: 3, unit: !0)
!6 = distinct !DISubprogram(name: "test_inline", scope: !1, file: !1, line: 6, unit: !0)
!7 = !DILocation(line: 7, scope: !6)
!14 = distinct !DISubprogram(name: "foo_inline1", scope: !1, file: !1, line: 11, unit: !0)

;.
; CHECK: [[META0:![0-9]+]] = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: [[META1:![0-9]+]], isOptimized: false, runtimeVersion: 0, emissionKind: NoDebug)
; CHECK: [[META1]] = !DIFile(filename: "test.cc", directory: {{.*}})
; CHECK: [[DBG32]] = distinct !DISubprogram(name: "test_inline", scope: [[META1]], file: [[META1]], line: 6, spFlags: DISPFlagDefinition, unit: [[META0]])
; CHECK: [[PROF33]] = !{!"function_entry_count", i64 1}
; CHECK: [[DBG34]] = !DILocation(line: 7, scope: [[DBG32]])
; CHECK: [[PROF35]] = !{!"VP", i32 0, i64 8000, i64 -6391416044382067764, i64 1000}
; CHECK: [[DBG36]] = distinct !DISubprogram(name: "foo_inline1", scope: [[META1]], file: [[META1]], line: 11, spFlags: DISPFlagDefinition, unit: [[META0]])
; CHECK: [[PROF37]] = !{!"function_entry_count", i64 -1}
;.
