; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals all --version 5
; RUN: opt < %s -S -passes=coro-early | FileCheck %s

;.
; CHECK: @NoopCoro.Frame.Const = private constant %NoopCoro.Frame { ptr ptrauth (ptr @__NoopCoro_ResumeDestroy, i32 0, i64 22017, ptr @NoopCoro.Frame.Const), ptr ptrauth (ptr @__NoopCoro_ResumeDestroy, i32 0, i64 15351, ptr getelementptr inbounds (%NoopCoro.Frame, ptr @NoopCoro.Frame.Const, i32 0, i32 1)) }, no_sanitize_address, no_sanitize_hwaddress
;.
define ptr @test_noop() #0 {
; CHECK-LABEL: define ptr @test_noop(
; CHECK-SAME: ) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    ret ptr @NoopCoro.Frame.Const
;
entry:
  %n = call ptr @llvm.coro.noop()
  ret ptr %n
}

define void @test_resume(ptr %hdl) #0 {
; CHECK-LABEL: define void @test_resume(
; CHECK-SAME: ptr [[HDL:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr @llvm.coro.subfn.addr(ptr [[HDL]], i8 0)
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [[TMP0]], ptr [[HDL]], i32 0, i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = ptrtoint ptr [[TMP1]] to i64
; CHECK-NEXT:    [[TMP3:%.*]] = call i64 @llvm.ptrauth.blend(i64 [[TMP2]], i64 22017)
; CHECK-NEXT:    call fastcc void [[TMP0]](ptr [[HDL]]) [ "ptrauth"(i32 0, i64 [[TMP3]]) ]
; CHECK-NEXT:    ret void
;
entry:
  call void @llvm.coro.resume(ptr %hdl)
  ret void
}

define void @test_destroy(ptr %hdl) #0 {
; CHECK-LABEL: define void @test_destroy(
; CHECK-SAME: ptr [[HDL:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = call ptr @llvm.coro.subfn.addr(ptr [[HDL]], i8 1)
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [[TMP1]], ptr [[HDL]], i32 0, i32 1
; CHECK-NEXT:    [[TMP2:%.*]] = ptrtoint ptr [[TMP1]] to i64
; CHECK-NEXT:    [[TMP3:%.*]] = call i64 @llvm.ptrauth.blend(i64 [[TMP2]], i64 15351)
; CHECK-NEXT:    call fastcc void [[TMP0]](ptr [[HDL]]) [ "ptrauth"(i32 0, i64 [[TMP3]]) ]
; CHECK-NEXT:    ret void
;
entry:
  call void @llvm.coro.destroy(ptr %hdl)
  ret void
}

attributes #0 = { "ptrauth-calls" }
;.
; CHECK: attributes #[[ATTR0]] = { "ptrauth-calls" }
; CHECK: attributes #[[ATTR1:[0-9]+]] = { nounwind memory(none) }
; CHECK: attributes #[[ATTR2:[0-9]+]] = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
; CHECK: attributes #[[ATTR3:[0-9]+]] = { nocallback nofree nosync nounwind willreturn memory(none) }
;.
